#include <iostream>
#include <math.h>
#include <cstring>

using namespace std;
class Product
{
private:
    char *ime;
    int nabavnacena;
    int prodaznacena;

public:
    Product(char *ime="", int nabavnacena=0, int prodaznacena=0)
    {
        this->ime= new char [strlen(ime)+1];
        strcpy(this->ime, ime);

        this->nabavnacena=nabavnacena;
        this->prodaznacena=prodaznacena;
    }
    Product(const Product &p)
    {
        this->ime= new char [strlen(p.ime)+1];
        strcpy(this->ime, p.ime);

        this->nabavnacena=p.nabavnacena;
        this->prodaznacena=p.prodaznacena;
    }

    ~Product()
    {
        delete []ime;
    }

       Product &operator=(const Product &p)
    {
        if(this != &p)
        {
            delete[]ime;
        }
        this->ime= new char [strlen(p.ime)+1];
        strcpy(this->ime, p.ime);

        this->nabavnacena=p.nabavnacena;
        this->prodaznacena=p.prodaznacena;

        return *this;
    }

    int profit()
    {
        return prodaznacena-nabavnacena;
    }

    void display()
    {
        cout<<ime<<" - "<<profit()<<endl;
    }

    char *getIme()
    {
        return ime;
    }
};


class Company
{
private:
    char *ime;
    Product *produkti;
    int n;

public:
    Company(char *ime="", Product *produkti=0, int n=0)
    {
        this->ime=new char [strlen(ime)+1];
        strcpy(this->ime, ime);

        this->n=n;
        this->produkti=new Product[n];

        for(int i=0; i<n; i++)
        {
            this->produkti[i]=produkti[i];
        }

    }

    Company(const Company &c )
    {
        this->ime=new char [strlen(c.ime)+1];
        strcpy(this->ime, c.ime);

        this->n=c.n;
        this->produkti=new Product[n];

        for(int i=0; i<n; i++)
        {
            this->produkti[i]=c.produkti[i];
        }

    }

    ~Company()
    {
        delete []ime;
        delete[]produkti;
    }



    Company &operator=(const Company &c )
    {
        if(this!=&c)
        {
            delete[]ime;
            delete[]produkti;
        }
        this->ime=new char[strlen(c.ime)+1];
        strcpy(this->ime, c.ime);

        this->n=c.n;
        this->produkti=new Product[c.n];

        for(int i=0; i<n; i++)
        {
            this->produkti[i]=c.produkti[i];
        }
        return *this;

    }



    int totalProfit()
    {
        int sum=0;
        for(int i=0; i<n; i++)
        {
            sum += produkti[i].profit();
        }
        return sum;
    }

    void display()
    {
        for(int i=0; i<n; i++)
        {
            produkti[i].display();
        }
        cout<<totalProfit()<<endl;
    }

    void addNewProduct(Product p)
    {
        Product *temp=new Product[n+1];
        for(int i=0; i<n; i++)
        {
            temp[i]=produkti[i];
        }
        temp[n++]=p;
        delete[]produkti;
        produkti=temp;
    }

    void deleteProduct(Product p)
    {
        int newN=0;
        for(int i=0; i<n; i++)
        {
            if(strcmp(produkti[i].getIme(), p.getIme())!=0)
            {
                newN++;
            }
        }

        Product *temp=new Product[newN];
        for(int i=0; i<n;  i++)
        {
             if(strcmp(produkti[i].getIme(), p.getIme())!=0)
             {
                 temp[i] = produkti[i];
             }
        }

            delete[]produkti;
            produkti=temp;
            n=newN;

    }

};
int main()
{
     int check;
   cin>>check;
   if(check == 0)
   {
       cout<<"--- Testing Product class ---"<<endl;
       Product p1;
       char name[100];
       cin>>name;
       p1=Product(name, 80, 111);
       Product p2=p1;
       p2.display();
   }
   Product products[100];
   for(int i=0; i<7; i++)
   {
       char name[100];
       int originalCost;
       int sellingPrice;
       cin>>name>>originalCost>>sellingPrice;
       products[i]=Product(name, originalCost, sellingPrice);
   }
   if(check == 1)
   {
       cout<<"--- Testing Company class ---"<<endl;
       char cmpName[100];
       cin>>cmpName;
       Company company;
       company=Company(cmpName, products, 7);
       company.display();
   }
   if(check == 2)
   {
       cout<<"--- Testing addNewProduct() and deleteProduct() method ---"<<endl;
       char n[100];
       cin>>n;
       Product p=Product(n, 29, 49);
       char cmpName[100];
       cin>>cmpName;
       Company company;
       company=Company(cmpName, products, 7);
       company.addNewProduct(p);
       company.display();
       company.deleteProduct(p);
       company.display();
   }

return 0;
}
