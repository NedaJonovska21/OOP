#include <iostream>
#include <math.h>
#include <cstring>

using namespace std;

class DisciplinaryAction
{
private:
    char *ime;
    int indeks;
    char *pricina;


public:
    DisciplinaryAction(char *ime = "", int indeks = 203194, char *pricina = "")
    {
        this->ime=new char [strlen(ime) + 1];
        this->indeks=indeks;
        this->pricina=new char[strlen(pricina)+1];

        strcpy(this->ime, ime);
        strcpy(this->pricina, pricina);

    }

    DisciplinaryAction(DisciplinaryAction & d)
    {
        this->ime=new char [strlen(d.ime) + 1];
        this->indeks=d.indeks;
        this->pricina=new char[strlen(d.pricina)+1];

        strcpy(this->ime, d.ime);
        strcpy(this->pricina, d.pricina);
    }

    ~DisciplinaryAction()
    {
        delete[]ime;
        delete[]pricina;
    }

   DisciplinaryAction &operator = (const DisciplinaryAction &d)
   {
       if(this != &d)
       {
           delete []ime;
           delete []pricina;
       }

       this->ime=new char [strlen(d.ime) + 1];
        this->indeks=d.indeks;
        this->pricina=new char[strlen(d.pricina)+1];

        strcpy(this->ime, d.ime);
        strcpy(this->pricina, d.pricina);

        return *this;
   }



   void setIndex(int indeks)
   {
       this->indeks=indeks;
   }

   int getIndex()
   {
       return indeks;
   }

   void print()
   {
        cout<<"Student: " <<ime<<endl;
        cout<<"Student's index: "<<indeks<<endl;
        cout<<"Reason: "<<pricina<<endl;
   }

};

int main()
{
     int n;
    cin >> n;

    /// Testing Default constructor and equal operator
    /// Array input

    DisciplinaryAction arr[n];

    for(int i = 0; i < n; i++) {
        char name[100];
        char reason[100];
        int index;

        cin >> name >> index >> reason;

        arr[i] = DisciplinaryAction(name, index, reason);
    }

    cout << "-- Testing operator = & print() --\n";
    arr[0].print();

    /// Testing copy constructor & set index

    DisciplinaryAction merka(arr[0]);
    merka.setIndex(112233);

    cout << "\n-- Testing copy constructor & set index --\n";
    cout << "-------------\n";
    cout << "Source:\n";
    cout << "-------------\n";
    arr[0].print();

    cout << "\n-------------\n";
    cout << "Copied and edited:\n";
    cout << "-------------\n";
    merka.print();

    /// Testing if array is OK

    cout << "\n-- Testing if array was inputted correctly --\n";

    for(int i = 0; i < n; i++)
        arr[i].print();

    return 0;
}

